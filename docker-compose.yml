services:
  app:
    image: verenichyi/nodejs2024q3-service-app:latest
    container_name: nodejs2024Q3-service-app
#    build:
#      context: .
#      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - ./src:/home/node/src
    restart: on-failure
    networks:
      - home-library
    command: npm run start:dev

  db:
    image: verenichyi/nodejs2024q3-service-db:latest
    container_name: nodejs2024Q3-service-db
#    build:
#      dockerfile: Dockerfile.database
#      context: .
    environment:
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - TZ=${TZ}
      - PGTZ=${PGTZ}
      - PGDATA=/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:${DB_INT_PORT}'
    volumes:
      - data:/var/lib/postgresql/data
      - logs:/logs
    restart: always
    networks:
      - home-library
    command: postgres -c port=${DB_INT_PORT} -c logging_collector=on -c log_destination=stderr -c log_directory=/logs -c log_statement=all

volumes:
  data:
  logs:

networks:
  home-library:
    driver: bridge